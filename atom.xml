<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>keep exceeding</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-09T04:17:19.942Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>FlorenceXie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/%E6%96%87%E7%8C%AE%E7%AC%94%E8%AE%B0/%E5%85%B3%E8%8A%82%E7%82%8E--%E5%8D%95%E7%BB%86%E8%83%9E%E8%BD%AC%E5%BD%95%E7%BB%84%E4%B8%8E%E8%B4%A8%E8%B0%B1%E6%B5%81%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/09/28/文献笔记/关节炎--单细胞转录组与质谱流式/</id>
    <published>2020-09-28T02:37:18.227Z</published>
    <updated>2020-09-09T04:17:19.942Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态"><a href="#通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态" class="headerlink" title="通过整合single-cell transcriptomics和mass cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态"></a>通过整合single-cell transcriptomics和mass cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态&quot;&gt;&lt;a href=&quot;#通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/%E5%8D%95%E7%BB%86%E8%83%9E%E6%B5%8B%E5%BA%8F/WGCNA/"/>
    <id>http://yoursite.com/2020/09/28/单细胞测序/WGCNA/</id>
    <published>2020-09-28T02:36:33.043Z</published>
    <updated>2018-11-14T08:22:10.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WGCNA-weighted-gene-co-expression-network-analysis"><a href="#WGCNA-weighted-gene-co-expression-network-analysis" class="headerlink" title="WGCNA(weighted gene co-expression network analysis)"></a>WGCNA(weighted gene co-expression network analysis)</h1><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><a href="https://www.plob.org/article/10682.html" target="_blank" rel="noopener">https://www.plob.org/article/10682.html</a></p><p>WGCNA所分析的数据是芯片数据（需要砸很多芯片，比如若要研究细胞凋亡，那么使用改方法需要实验者提供细胞凋亡各个时期的芯片数据，以了解这一生理过程中细胞内所有基因的表达变化)。</p><p>从方法上来讲，WGCNA分为<strong>表达量聚类分析和表型关联</strong>两部分，主要包括基因之间相关系数计算、基因模块的确定、共表达网络、模块与性状关联四个步骤</p><p>第一步计算任意两个基因之间的相关系数（Person Coefficient）。为了衡量两个基因是否具有相似表达模式，一般需要设置阈值来筛选，高于阈值的则认为是相似的。但是这样如果将阈值设为0.8，那么很难说明0.8和0.79两个是有显著差别的。因此，<strong>WGCNA分析时采用相关系数加权值，即对基因相关系数取N次幂</strong>，使得网络中的基因之间的连接服从<strong>无尺度网络分布(scale-freenetworks)</strong>，这种算法更具生物学意义。</p><p><img src="https://i.loli.net/2018/11/05/5be0059dbceea.jpg" alt></p><p>网络的数学名称是图，在图论中对于每一个节点有一个重要概念，即：度。一个点的度是指图中该点所关联的边数。如下图，如果不加以思考，人们很容易认为生活中常见的网络会是一种random network，即每一个节点的度相对平均。然而第二种图，即scale-free network才是一种更稳定的选择。Scale-free network具有这样的特点，即存在少数节点具有明显高于一般点的度，这些点被称为hub。由少数hub与其它节点关联，最终构成整个网络。这样的网络的节点度数与具有该度数的节点个数间服从power distribution。这为我们寻找最佳参数提供了理论依据。     这里做一点扩展，我认为时非常有必要的。只要我们愿意抽象，Scale-free network大量存在于的生活中。人们的社交网络、生物基因蛋白质的相互作用、计算机网络甚至sexually transmitted diseases均有这层关系。生物体选择scale-free network而不是random network是有它进化上的原因的，显然对于scale-free network，少数关键基因执行着主要功能，这种网络具有非常好的鲁棒性，即只要保证hub的完整性，整个生命体系的基本活动在一定刺激影响下将不会受到太大影响，而random network若受到外界刺激，其受到的伤害程度将直接与刺激强度成正比。</p><p> <a href="https://www.jianshu.com/p/a2790dc1f010" target="_blank" rel="noopener">https://www.jianshu.com/p/a2790dc1f010</a></p><p>第二步通过基因之间的相关系数构建分层聚类树，<strong>聚类树的不同分支代表不同的基因模块</strong>，不同颜色代表不同的模块。基于基因的加权相关系数，将基因按照表达模式进行分类，将模式相似的基因归为一个模块。这样就可以将几万个基因通过基因表达模式被分成了几十个模块，是一个提取归纳信息的过程。</p><p><img src="https://i.loli.net/2018/11/05/5be0062feeae6.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WGCNA-weighted-gene-co-expression-network-analysis&quot;&gt;&lt;a href=&quot;#WGCNA-weighted-gene-co-expression-network-analysis&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/%E6%96%87%E7%8C%AE%E7%AC%94%E8%AE%B0/Nature--%E5%A4%96%E5%91%A8T%E7%BB%86%E8%83%9E%E6%89%A9%E5%A2%9E%E9%A2%84%E6%B5%8B%E8%82%BF%E7%98%A4%E6%B5%B8%E6%B6%A6%E5%92%8C%E4%B8%B4%E5%BA%8A%E7%96%97%E6%95%88/"/>
    <id>http://yoursite.com/2020/09/28/文献笔记/Nature--外周T细胞扩增预测肿瘤浸润和临床疗效/</id>
    <published>2020-09-28T02:36:15.639Z</published>
    <updated>2020-03-24T04:17:07.446Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nature-外周T细胞扩增预测肿瘤浸润和临床疗效"><a href="#Nature-外周T细胞扩增预测肿瘤浸润和临床疗效" class="headerlink" title="Nature | 外周T细胞扩增预测肿瘤浸润和临床疗效"></a>Nature | 外周T细胞扩增预测肿瘤浸润和临床疗效</h1><p>Title: Peripheral T cell expansion predicts tumor  infiltration and clinical response</p><p><a href="https://doi.org/10.1038/s41586-020-2056-8" target="_blank" rel="noopener">Nature, 2020</a></p><p>​      </p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p><strong>测序平台</strong>：10X</p><p><strong>样本</strong>: </p><p>来自14个未经治疗的肿瘤病人，每个病人都取了肿瘤组织和癌旁组织，其中4个病人额外取了外周血        </p><p>14个病人分属于4种不同的肿瘤: 非小细胞肺癌(lung)，子宫内膜腺癌(endo), 大肠腺癌(colon), 肾透明腺癌（renal）</p><p>样本信息：</p><p><img src="https://i.loli.net/2020/03/22/er7iUpG93ZvfMCw.png" alt="snipaste20200322_205305.png"></p><p><strong>细胞量</strong>：测序200,626个免疫细胞, 总测序量：541,863,094 mRNA transcripts(其中141,623个Tcell)</p><p><strong>重点发现</strong>：</p><ul><li>在肿瘤组织和癌旁组织中都存在克隆扩增的效应性Tcell</li><li>具有这种克隆扩增基因特征的患者对anti-PDL1治疗反应最好。</li><li>在肿瘤和癌旁邻近组织中发现的克隆型扩增的效应性Tcell也可以在外周血中检测到，说明这种Tcell有潜力成为筛选anti-PDL1响应病人的新指标</li><li>肿瘤浸润Tcell（尤其是anti-PDL1效果良好的病人中）从肿瘤外的部位补充新鲜的，未耗竭的Tcell。这表明这部分病人肿瘤免疫循环持续活跃      </li></ul><p>​          </p><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><ul><li><p><strong>单细胞建库：</strong>10x，Chromium Single Cell 5′ Library， scRNA+scTCR</p></li><li><p><strong>数据分析</strong>：</p><p>主要使用Seurat 3.0.2</p><ul><li>使用Seurat中的<code>SCTransform</code>进行校正</li><li>使用<code>IntegrationAnchors</code>和<code>IntegrateData</code>整合不同批次的数据（dimensions：30）</li><li>聚类降维：<code>FindNeighbours</code>和<code>FindClusters</code>(resolution: 1.6)</li><li>寻找每个cluster的biomarker：<code>FindMarker</code>(logfc.threshold默认的参数是0.25，由于这个阈值，某些cluster找到的marker少于20个，所以调整到0.10)</li></ul></li><li><p><strong>类的注释</strong>：常规marker + <code>FindMarkers</code>+singleR</p><p>CD3E表达量和TCR clonotype均高的认为是Tcell, 两者都低的认为是non-Tcell</p></li><li><p><strong>寻找差异基因：</strong></p><ul><li>寻找每个cluster的biomarker：函数<code>FindMarkers</code> (logfc.threshold默认的参数是0.25，由于这个阈值，某些cluster找到的marker少于20个，所以调整到0.10)</li></ul></li></ul><ul><li><p><strong>下游分析：</strong>（针对转录组数据的分析主要在附件里，本文的重点在于TCR分析）</p><ul><li><p>GSEA</p></li><li><p>与已有数据做对比: R包singleR， 从已发表的数据中提取基因集作为参照</p><ul><li><p>​    Guo, X. et al. Global characterization of T cells in non-small-cell lung cancer by single-<br>cell sequencing. Nat. Med. 24, 978–985 (2018).</p></li><li><p>​    Zhang, L. et al. Lineage tracking reveals dynamic relationships of T cells in colorectal<br>cancer. Nature 564, 268–272 (2018).</p></li><li><p>​    Yost, K. E. et al. Clonal replacement of tumor-specific T cells following PD-1 blockade.<br>Nat. Med. 25, 1251–1259 (2019).</p></li></ul></li><li><p>resident memory T cells， terminal versus stem-like exhaustion Tcell的区分：</p><p>文献中使用的marker与自己的数据overlap后，计算基因集的zscore</p></li><li><p>整合转录组和TCR数据</p></li><li><p>临床实验数据分析，计算clone与预后的关系</p></li></ul></li></ul><h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><h3 id="Extended-Data-Fig-2"><a href="#Extended-Data-Fig-2" class="headerlink" title="Extended Data Fig. 2"></a>Extended Data Fig. 2</h3><p><strong>a</strong>: 很多clonotype在肿瘤和癌旁组织（NAT）中共享</p><p>dual-expanded clones: 既在肿瘤中，又在NAT中表达的clone</p><p>singletons：只在一个细胞上表达的clone</p><p>tumor multiples: 至少在两个细胞上表达， 但只在肿瘤中表达的clone</p><p>NAT multiples：至少在两个细胞上表达， 但只在癌旁组织中表达的clone</p><p><strong>b</strong>: 大部分clonotypes属于singletons</p><p>9-18%的clonotypes属于multiples和dual-expanded clones</p><p><strong>c</strong>: dual-expanded clones在某些组织中是主要的克隆类型</p><p><strong>d</strong>: 通过对NAT和肿瘤样本中克隆细胞的计数分析，发现不同患者的克隆扩增行为不同</p><p>在一些患者,比如Colon1，dual-expanded clones沿着主对角线排列，即在肿瘤和NAT中双扩增克隆的细胞比例近似相等，提示由类似的克隆类型导致的肿瘤和NAT间的协调或平行过程，相反，在其他患者中，双扩增克隆从主对角线上分散，表明每个克隆在肿瘤和NAT室中具有独立的扩增、迁移或消耗模式。</p><p><strong>e</strong>: 根据克隆在组织和血液中的扩增程度对克隆进行分类 （对应Fig1b）</p><p>​        </p><p><img src="https://i.loli.net/2020/03/23/C2Tp3Ber7wlPzYh.png" alt="snipaste20200323_100611.png"></p><p>​         </p><h3 id="Fig1"><a href="#Fig1" class="headerlink" title="Fig1"></a>Fig1</h3><p><strong>a</strong>: 4个有blood测序数据的病人的克隆扩增散点图</p><p>点的大小表示血液克隆的大小</p><p>颜色代表不同的组织扩增模式</p><p><strong>b</strong>：克隆扩增模式图解：</p><p>血液中的single称为blood non-expanded, multiple称为 blood-expanded</p><p>不在血液中表达的clone称为blood-independent</p><p><strong>c &amp; d</strong> : 在具有双扩增克隆比例较多的患者中，组织中的双扩增克隆在血液中也存在扩增</p><p><strong>f-i</strong>: 外周血中的扩增与肿瘤浸润具有正相关</p><p><img src="https://i.loli.net/2020/03/23/MLfEV4DeK5WHY7S.png" alt="snipaste20200323_102756.png"></p><p>​          </p><h3 id="Fig2"><a href="#Fig2" class="headerlink" title="Fig2:"></a>Fig2:</h3><p><strong>a</strong>：转录组数据聚类降维umap图</p><p><strong>b</strong>：转录组分群对应的克隆表达模式</p><ul><li>CD4和CD8表达不同的克隆模式</li><li>细胞亚群8.1、8.2和8.3 的克隆大部分是双扩增型</li></ul><p><strong>c</strong>：将细胞亚群映射到血液样本的克隆数据中发现许多在NAT和肿瘤中表现出一致的克隆（parallel dual expansion）主要来源于8.1-Teff细胞,8.3b-Trm也存在少量parallel dual expansion.</p><p><strong>d</strong>: 8.1-Teff是唯一在blood expansion和dual-expanded的clone size间有统计学显著关系的克隆，表明它们在外周克隆扩增和肿瘤浸润中起主导作用。</p><p><img src="https://i.loli.net/2020/03/23/sjL1YX5nkVMhW6q.png" alt="snipaste20200323_212503.png"></p><p>​       </p><h3 id="Fig3"><a href="#Fig3" class="headerlink" title="Fig3"></a>Fig3</h3><p>由于本文数据只获取了静态的数据，不能反映动态变化的过程。所以本文作者分析了已发表的基底细胞癌的免疫治疗前后的Tcell数据</p><p><strong>a</strong>: 肿瘤和血液中clone size相关性</p><p>结论：在novel CD8中，治疗后的克隆大小和治疗前血液中的转录数显著相关，说明部分治疗后新出现的CD8 clone来源于外周血</p><p><strong>b</strong>: 血液克隆多样性与novel克隆和novel cells的关系</p><p>尽管不同患者在新克隆的数量方面存在显著差异，但这些差异与外周血克隆多样性程度有关，进一步支持了外周血和肿瘤内克隆扩增之间的关系</p><p><strong>c</strong>: 耗竭性Tcell和非耗竭性Tcell的克隆特征</p><p>根据肿瘤克隆在治疗前是否与血液共享TCR序列，进一步分类,分为区分血液独立型（blood-independent）克隆和血液相关型（blood-associated）克隆。在两个具有最大血液克隆多样性的患者中，血液clone size和衰竭表型之间具有相关性： non-exhausted clones更可能与blood-associated clone相关，而 exhausted clones更有可能与blood-independent clone相关。此外，与血液相关的未耗尽克隆在治疗后肿瘤中的克隆大小显著大于非血液相关克隆。由此推测可能存在的两种克隆扩增的model（1）独立于血液的局部扩增产生耗竭性T细胞；（2）来自相对较新血液的浸润过程将新的、未耗尽的克隆体引入肿瘤。</p><p><img src="https://i.loli.net/2020/03/24/7vLUmYSJytWrDkI.png" alt="snipaste20200324_113626.png"></p><p>​       </p><h3 id="Fig4"><a href="#Fig4" class="headerlink" title="Fig4"></a>Fig4</h3><p><strong>a</strong>: 肿瘤多发性和双重扩增的基因特征与更好的PFS相关</p><p><strong>b</strong>: 考虑CD8表达量的不同，使用CD8A表达和tissue expansion signature score进行双变量分析</p><p><img src="https://i.loli.net/2020/03/24/j4iWSrg6Yn9lyQL.png" alt="snipaste20200324_114034.png"></p><p>​        </p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>本文最重要的发现是：来自外周血的未耗竭T细胞和耗竭性T细胞克隆可能是解释癌症免疫治疗疗效异质性的关键因素。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nature-外周T细胞扩增预测肿瘤浸润和临床疗效&quot;&gt;&lt;a href=&quot;#Nature-外周T细胞扩增预测肿瘤浸润和临床疗效&quot; class=&quot;headerlink&quot; title=&quot;Nature | 外周T细胞扩增预测肿瘤浸润和临床疗效&quot;&gt;&lt;/a&gt;Nature | 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/%E6%96%87%E7%8C%AE%E7%AC%94%E8%AE%B0/Immunity--TCF1%E5%86%B3%E5%AE%9ACD8%20T%E7%BB%86%E8%83%9E%E5%91%BD%E8%BF%90/"/>
    <id>http://yoursite.com/2020/09/28/文献笔记/Immunity--TCF1决定CD8 T细胞命运/</id>
    <published>2020-09-28T02:36:15.626Z</published>
    <updated>2020-03-15T16:24:33.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Immunity-TCF1决定CD8-T细胞命运"><a href="#Immunity-TCF1决定CD8-T细胞命运" class="headerlink" title="Immunity | TCF1决定CD8 T细胞命运"></a>Immunity | TCF1决定CD8 T细胞命运</h1><p>Title: TCF-1-Centered Transcriptional Network Drives an Effector versus Exhausted CD8 T Cell-Fate Decision</p><p>Immunity, 2019.09    <a href="https://doi.org/10.1016/j.immuni.2019.09.013" target="_blank" rel="noopener">https://doi.org/10.1016/j.immuni.2019.09.013</a></p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p><strong>测序平台</strong>：10X</p><p><strong>样本</strong>: </p><p>来源于LCMV感染小鼠的初始T细胞(naive T)， 效应T细胞(Teff), 早期耗竭T细胞（Tex）</p><p><img src="https://i.loli.net/2020/03/15/SRFeVxXMir9zCYl.png" alt="snipaste20200315_232129.png"></p><p><strong>细胞量</strong>：5*10^3</p><p><strong>重点发现</strong>：</p><ul><li>小鼠慢性感染和肿瘤发生早期，存在着耗竭性T细胞前体和类效应性T细胞的二元分化机制</li><li>TCF1促进耗竭性T细胞前体分化， 抑制效应T细胞分化</li><li>PD-1维持TCF1+Tex前体细胞的数量</li><li>TCF1的作用机制是上调下游Eomes和c-Myb的表达</li></ul><h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><ul><li><strong>单细胞建库：</strong> 10X</li><li><strong>质控：</strong><ul><li>删除所有线粒体基因</li><li>保留表达基因数大于1000的细胞</li></ul></li><li><strong>normalization</strong> ：R包 <code>Scran</code></li><li><strong>数据分析</strong>：<ul><li><code>MAST</code>: 进行细胞群间差异基因分析</li><li><code>Monocle-2</code>,<code>TSCAN</code>, <code>STIP</code>:假时序分析</li></ul></li><li><strong>下游分析：</strong><ul><li>假时序分析</li><li>ATAC-Seq</li><li>GO分析：挑选每群top100的基因。工具：DAVID网站</li></ul></li></ul><p>​       </p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><ul><li>在急性感染或疫苗接种过程中，初始CD8 T细胞被激活并分化为一个效应T细胞池，其中含有KlRG1hi终末效应（Teff）细胞和KlRG1LoCD127Hi记忆前体（Tmp）细胞。Teff细胞数量一般是Tmp的5-20倍。KlRG1hi终末效应细胞在几周内迅速耗竭， 而Tmp细胞则转化为长效记忆细胞</li><li>在慢性感染和肿瘤中，主要为 KLRG1Lo 耗竭性CD8细胞</li><li>谱系追踪显示，慢性感染过程中KLRG1HiTeff生存能力差，无法转化为Tex</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Immunity-TCF1决定CD8-T细胞命运&quot;&gt;&lt;a href=&quot;#Immunity-TCF1决定CD8-T细胞命运&quot; class=&quot;headerlink&quot; title=&quot;Immunity | TCF1决定CD8 T细胞命运&quot;&gt;&lt;/a&gt;Immunity | T
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/%E6%96%87%E7%8C%AE%E7%AC%94%E8%AE%B0/Immunity--HPV+%E5%92%8CHPV-%E5%A4%B4%E9%A2%88%E7%99%8C%E6%82%A3%E8%80%85%E5%85%8D%E7%96%AB%E5%9B%BE%E8%B0%B1/"/>
    <id>http://yoursite.com/2020/09/28/文献笔记/Immunity--HPV+和HPV-头颈癌患者免疫图谱/</id>
    <published>2020-09-28T02:36:15.614Z</published>
    <updated>2020-03-06T08:36:39.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Immunity-HPV-和HPV-头颈癌患者免疫图谱"><a href="#Immunity-HPV-和HPV-头颈癌患者免疫图谱" class="headerlink" title="Immunity | HPV+和HPV-头颈癌患者免疫图谱"></a>Immunity | HPV+和HPV-头颈癌患者免疫图谱</h1><p>Title: Immune Landscape of Viral- and Carcinogen-Driven Head and Neck Cancer </p><p>Immunity, 2020.01    <a href="https://doi.org/10.1016/j.immuni.2019.11.014" target="_blank" rel="noopener">https://doi.org/10.1016/j.immuni.2019.11.014</a>         </p><p>&nbsp;      </p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p><strong>测序平台</strong>：10X</p><p><strong>样本</strong>: </p><ul><li><p>​    实验组：来自18个HPV– HNSCC 病人 和8个HPV+ HNSCC 病人的肿瘤组织及外周血的免疫细胞 （HNSCC：头颈癌）</p></li><li><p>​    对照组：来自5个睡眠呼吸暂停综合征患者的扁桃体组织和6份来自健康人的PBMC的免疫细胞</p></li></ul><p><strong>细胞量</strong>：经过质控，剩余131,224 个免疫细胞</p><p><strong>重点发现</strong>：</p><ul><li><p>HPV-HNSCC和HPV+HNSCC肿瘤微环境中免疫细胞转录组存在明显差异。主要差异体现在CD4辅助Tcell和Bcell。两种肿瘤中，CD8+Tcell以及Treg cell转录组相似</p></li><li><p>利用多光谱成像揭示HPV+病人中存在与疾病进展相关的免疫结构（TLSs）</p></li><li><p>TCGA数据显示, 滤泡辅助Tcell与头颈癌预后相关        </p><p>&nbsp;      </p></li></ul><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><ul><li>头颈癌诱因：<ul><li>暴露于酒精或烟草等致癌物，引发基因改变</li><li>HPV感染</li></ul></li><li>HPV+HNSCC  预后更好</li><li>HPV+ HNSCC  肿瘤微环境中Bcell比例更高，HPV– HNSCC 中功能异常的CD8 Tcell比例更高</li><li>PD1或PDL1阻断疗法只对大约20%-30%的HNSCC病人有效        </li></ul><p>&nbsp;      </p><h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><ul><li><p><strong>单细胞建库：</strong>Chromium Single Cell 30 Reagent (V2 Chemistry) , 10X</p></li><li><p><strong>质控：</strong></p><ul><li>保留基因数在200-20,000之间的细胞</li><li>保留在超过1%细胞中表达，且表达量大于3 counts的基因</li><li>质控后，剩余131,224 个细胞，每个细胞平均表达1,262个基因</li></ul></li><li><p>使用TPM用于下游分析</p></li><li><p>Library size <strong>normalization</strong> ：log((每个细胞中某基因表达量*该细胞中基因总表达量)/10000 + 1)</p></li><li><p><strong>数据分析</strong>：</p><ul><li>数据的scale使用了Seurat软件</li><li>使用了两种降维方法： FItSNE  &amp; Diffusion Map（用于伪时序分析）</li><li>聚类方法：DRAGON （DeteRministic Annealing Gaussian mixture mOdel clusteriNg algorithm ）</li></ul></li><li><p><strong>类的注释</strong>：利用常规使用的marker</p></li><li><p><strong>寻找差异基因：</strong></p><ul><li>方法：Wilcoxon rank sum test </li><li>标准：在大于10%的细胞中表达，且差异倍数（logFC）大于0.5</li></ul></li><li><p><strong>下游分析：</strong></p><ul><li><p>利用R包SingleSeqGset 进行基因富集分析</p></li><li><p>利用Diffusion Map进行伪时序分析</p></li><li><p>计算亚群及样本间相关性</p></li><li><p>利用CellTalker，探索细胞亚群间cross-talk</p></li><li><p>TCGA数据分析        </p><p>&nbsp;        </p></li></ul></li></ul><h3 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h3><h4 id="Fig1"><a href="#Fig1" class="headerlink" title="Fig1:"></a>Fig1:</h4><ul><li>A: 流程</li><li>B：相关性分析: PBMC，TIL和扁桃体淋巴细胞以及HPV+和HPV- TIL在转录组上存在明显差异</li><li>C、D、E：聚类及注释</li><li>F： HPV-和HPV+ TIL相比比，Bcell，髓系细胞，CD4+ Tcon转录组差异较大，Treg和CD8细胞则比较相似</li></ul><p><img src="https://i.loli.net/2020/03/01/s79hAHJDnwilQoR.png" alt="snipaste20200301_222902.png"></p><p>​                    </p><h4 id="Fig2-CD8-Tcell"><a href="#Fig2-CD8-Tcell" class="headerlink" title="Fig2: CD8 Tcell"></a>Fig2: CD8 Tcell</h4><ul><li><p>B : cluster 1-4, 8主要来源于TIL；cluster 5-7由PBMC、扁桃体和TIL的混合组成</p></li><li><p>C: 每个cluster的marker   D：各亚群marker富集分析（biological functions）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cluster 1 was associated with cycling cells (e.g., MKI67); cluster 2 was associated with interferon (IFN) response genes (e.g., ISG15); clusters 3 and 4 expressed checkpoint markers associated with exhaustion (e.g., PDCD1 [gene for PD-1] andCTLA4andHAVCR2[gene for TIM3]); cluster 5 was generally quiescent and expressed low levels of effector molecules (e.g., GZMH and KLRD1); cluster 6 expressed markers associated with naive or memory cells (e.g., CCR7 andCD27); cluster 7 expressed genes associated with early activation (e.g., JUNB and FOSB); and cluster 8 expressed genes associated with effector function (e.g., KLRG1 and GZMH)</span><br></pre></td></tr></table></figure></li><li><p>E： 时序分析（diffusion map）显示PBMC和TIL间存在转化关系，Fig2F显示HPV+，HPV- CD8 Tcell转录组重叠</p><ul><li>DC1： 主要与终末分化表型相关（沿着DC1，LAG3, CTLA4, PDCD1 (gene for PD1) and HAVCR2 (gene for TIM3)表达量逐渐升高），除此之外还与细胞粘附和Bcell招募相关（ENTPD1和CXCL13）</li><li>DC2：主要与记忆表型相关（CD27, CCR7, EOMES）          </li></ul><p>​      </p></li></ul><p><img src="https://i.loli.net/2020/03/02/YCUXxmiGksR2H5M.png" alt="snipaste20200302_231255.png"></p><p>​                      </p><h4 id="Fig3-CD4-Tcell"><a href="#Fig3-CD4-Tcell" class="headerlink" title="Fig3: CD4+ Tcell"></a>Fig3: CD4+ Tcell</h4><p>分析思路类似于CD8</p><p>主要结论：</p><p><strong>CD4</strong>（Fig3A-Fig3E）</p><ul><li>扁桃体和TIL CD4 Tcell富集了TFH和TH1相关基因</li><li>HPV+ TIL富集更多的TFH基因</li><li>HPV+ TIL和HPV- TIL位于不同的分化界面上。CD4分化轨迹经历共同的起始阶段后，分别向cluster1和cluster7两个不同的终末分化状态转化。cluster1 主要来源于HPV+TIL，富集TFH相关基因。cluster7主要来源HPV- TIL，主要富集激活，IFN response，记忆相关基因</li></ul><p><strong>Treg</strong>（Fig3F-Fig3J）</p><ul><li>HPV+ Treg和HPV- Treg在时序上存在细微差异。分化早期，来自HPV-的Treg更多</li><li>分化早期的Treg富集IFN-response 基因（IFITM1, IFIT1, IFIT3, and ISG20）, 晚期主要富集TNF超家族基因（GITR， OX40，41BB），映证了TNF超家族基在维持Treg功能方面的作用        </li></ul><p>​         </p><p><img src="https://i.loli.net/2020/03/02/INohiMVAtu26Lb4.png" alt="snipaste20200302_231255.png"></p><p>​             </p><h4 id="Fig4：HPV-肿瘤微环境中发现生发中心（GC）B-cell"><a href="#Fig4：HPV-肿瘤微环境中发现生发中心（GC）B-cell" class="headerlink" title="Fig4：HPV+ 肿瘤微环境中发现生发中心（GC）B cell"></a>Fig4：HPV+ 肿瘤微环境中发现生发中心（GC）B cell</h4><ul><li>HPV+ 肿瘤微环境富含GC Bcell， 包括位于暗区的高增殖B细胞，和位于亮区的非增殖B细胞</li><li>HPV- 中的Bcell主要浆细胞和记忆Bcell，原因可能是因为缺乏TFH细胞的辅助      </li></ul><p>​         </p><p><img src="https://i.loli.net/2020/03/06/R8imdWCqcajJh9x.png" alt="snipaste20200306_143403.png"></p><p>​                     </p><h4 id="Fig5-Myeloid"><a href="#Fig5-Myeloid" class="headerlink" title="Fig5: Myeloid"></a>Fig5: Myeloid</h4><ul><li><p>PMBC中的髓系向肿瘤中髓系细胞转化</p></li><li><p>巨噬细胞不能简单分成M1和M2，它们之间存在连续变化的过渡关系（基本每种肿瘤的免疫细胞单细胞测序文章都提到了在这一点，没什么新意）       </p></li></ul><p><img src="https://i.loli.net/2020/03/06/b2f7eFx3gqm6acR.png" alt="snipaste20200306_155518.png">      </p><p>​          </p><h3 id="Fig6-免疫细胞间的cross-talk"><a href="#Fig6-免疫细胞间的cross-talk" class="headerlink" title="Fig6: 免疫细胞间的cross-talk"></a>Fig6: 免疫细胞间的cross-talk</h3><p>R包：celltalker</p><p>肿瘤组织中免疫细胞之间的cross-talk比癌旁和PBMC多</p><p>HPV+和HPV-肿瘤微环境中都存在独特的相互关系</p><p><img src="https://i.loli.net/2020/03/06/qrNYPehyVCE3dg7.png" alt="snipaste20200306_155518.png">      </p><p>​       </p><h4 id="Fig7：免疫荧光揭示独特的空间结构"><a href="#Fig7：免疫荧光揭示独特的空间结构" class="headerlink" title="Fig7：免疫荧光揭示独特的空间结构"></a>Fig7：免疫荧光揭示独特的空间结构</h4><ul><li>A：基于免疫细胞的组成不同，对不同slide进行了分层聚类</li><li>B-F：根据空间结构上的邻近程度，推测细胞细胞之间相互作用的几率。在B细胞频率最高的簇中，B细胞与其他B细胞相互作用的几率最高，其次是与CD4+Tconv细胞相互作用。并且，在5类cluster中，发现了反映三级淋巴结结构（TLSs）的免疫细胞组织模式</li><li>G-H: 根据空间结构上的推测出的相互作用关系，比较HPV+和HPV-肿瘤中Bcell与CD4+ Tconv间相互关系的差异。发现只有在HPV+肿瘤中存在GC Bcell与TFH的相互关系</li><li>I：利用TCGA数据库发现，在HPV+头颈癌病人中，TFH 基因集表达量高预示着更好的预后</li></ul><p><img src="https://i.loli.net/2020/03/06/16HfsSbwMKBcdTW.png" alt="snipaste20200306_155518.png"></p><h3 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h3><p>本文主要揭示HPV+和HPV-头颈癌病人免疫微环境的差异。其中最重要的差异在于HPV+病人中富集TFH，并存在TLSs。且TCGA分析显示TFH与预后相关。</p><p>总体来讲，本文的亮点在于实验设计上。取样取的很全面。既包括肿瘤组织，PBMC，又包括扁桃体。然后各种组织比来比去，总会找出很多差异的。至于文中用到的各种生信分析手段基本都是常规使用的分析套路。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Immunity-HPV-和HPV-头颈癌患者免疫图谱&quot;&gt;&lt;a href=&quot;#Immunity-HPV-和HPV-头颈癌患者免疫图谱&quot; class=&quot;headerlink&quot; title=&quot;Immunity | HPV+和HPV-头颈癌患者免疫图谱&quot;&gt;&lt;/a&gt;Imm
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%9C%A8Jupyter%E4%B8%AD%E5%AE%89%E8%A3%85R%E5%86%85%E6%A0%B8/"/>
    <id>http://yoursite.com/2020/09/28/R语言/在Jupyter中安装R内核/</id>
    <published>2020-09-28T02:35:53.693Z</published>
    <updated>2020-08-11T12:19:39.584Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在Jupyter中安装R内核"><a href="#在Jupyter中安装R内核" class="headerlink" title="在Jupyter中安装R内核"></a>在Jupyter中安装R内核</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">'IRkernel'</span>)</span><br><span class="line">IRkernel::installspec()  <span class="comment"># to register the kernel in the current R installation</span></span><br></pre></td></tr></table></figure><p>重启jupyter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在Jupyter中安装R内核&quot;&gt;&lt;a href=&quot;#在Jupyter中安装R内核&quot; class=&quot;headerlink&quot; title=&quot;在Jupyter中安装R内核&quot;&gt;&lt;/a&gt;在Jupyter中安装R内核&lt;/h1&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E4%B8%8B%E8%BD%BDcBioPortal%E4%B8%AD%E7%9A%84%E6%96%87%E7%AB%A0%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2020/09/28/R语言/下载cBioPortal中的文章相关数据/</id>
    <published>2020-09-28T02:35:53.689Z</published>
    <updated>2019-01-06T14:57:42.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用cgdsr下载cBioPortal数据"><a href="#使用cgdsr下载cBioPortal数据" class="headerlink" title="使用cgdsr下载cBioPortal数据"></a>使用cgdsr下载cBioPortal数据</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(cgdsr)</span><br><span class="line"></span><br><span class="line">mycgds = CGDS(<span class="string">"http://www.cbioportal.org/"</span>)</span><br><span class="line"></span><br><span class="line">class(mycgds)</span><br><span class="line"></span><br><span class="line">tt &lt;- getCancerStudies(mycgds)</span><br><span class="line"></span><br><span class="line">tt[which(tt$name == <span class="string">'Breast Invasive Carcinoma (TCGA, PanCancer Atlas)'</span>),]</span><br><span class="line"></span><br><span class="line">study_id &lt;- tt[which(tt$name == <span class="string">'Breast Invasive Carcinoma (TCGA, PanCancer Atlas)'</span>),][,c(<span class="number">1</span>,<span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line">profiles &lt;- getGeneticProfiles(mycgds, study_id$cancer_study_id)</span><br><span class="line"></span><br><span class="line">cases &lt;- getCaseLists(mycgds, study_id$cancer_study_id)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用cgdsr下载cBioPortal数据&quot;&gt;&lt;a href=&quot;#使用cgdsr下载cBioPortal数据&quot; class=&quot;headerlink&quot; title=&quot;使用cgdsr下载cBioPortal数据&quot;&gt;&lt;/a&gt;使用cgdsr下载cBioPortal数据&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%9B%BE%E5%BD%A2%E5%88%9D%E9%98%B6/"/>
    <id>http://yoursite.com/2020/09/28/R语言/图形初阶/</id>
    <published>2020-09-28T02:35:53.686Z</published>
    <updated>2018-09-12T07:21:09.934Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图形初阶"><a href="#图形初阶" class="headerlink" title="图形初阶"></a>图形初阶</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opar &lt;- par(no.readonly=<span class="literal">TRUE</span>) <span class="comment"># make a copy of current settings</span></span><br></pre></td></tr></table></figure><p><code>abline</code> 添加参考线</p><p><code>text</code>  <code>mtext</code>  添加文本标注</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">legend(<span class="string">"topleft"</span>, inset=<span class="number">.05</span>, title=<span class="string">"Drug Type"</span>, c(<span class="string">"A"</span>,<span class="string">"B"</span>),</span><br><span class="line">       lty=c(<span class="number">1</span>, <span class="number">2</span>), pch=c(<span class="number">15</span>, <span class="number">17</span>), col=c(<span class="string">"red"</span>, <span class="string">"blue"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)) <span class="comment"># 按行填充2行2列</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">attach</span>(mtcars)</span><br><span class="line">layout(matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), <span class="number">2</span>, <span class="number">2</span>, byrow = <span class="literal">TRUE</span>), widths=c(<span class="number">3</span>, <span class="number">1</span>), heights=c(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">hist(wt)</span><br><span class="line">hist(mpg)</span><br><span class="line">hist(disp)</span><br><span class="line"><span class="keyword">detach</span>(mtcars)  <span class="comment">###第一个图占一行</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title(main,sub,col.main,col.sub)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(dose, drugA, type=<span class="string">"b"</span>)  <span class="comment">###同时输出点和线</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">par(lty=<span class="number">2</span>, pch=<span class="number">17</span>)            <span class="comment"># change line type and symbol</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Adding text, lines, and symbols  添加文本，自定义坐标轴</span></span><br><span class="line">plot(dose, drugA, type=<span class="string">"b"</span>,  </span><br><span class="line">     col=<span class="string">"red"</span>, lty=<span class="number">2</span>, pch=<span class="number">2</span>, lwd=<span class="number">2</span>,</span><br><span class="line">     main=<span class="string">"Clinical Trials for Drug A"</span>, </span><br><span class="line">     sub=<span class="string">"This is hypothetical data"</span>, </span><br><span class="line">     xlab=<span class="string">"Dosage"</span>, ylab=<span class="string">"Drug Response"</span>,</span><br><span class="line">     xlim=c(<span class="number">0</span>, <span class="number">60</span>), ylim=c(<span class="number">0</span>, <span class="number">70</span>))</span><br></pre></td></tr></table></figure><p><code>ann=FALSE</code>禁用默认标题 或者用 <code>main=&quot;&quot;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图形初阶&quot;&gt;&lt;a href=&quot;#图形初阶&quot; class=&quot;headerlink&quot; title=&quot;图形初阶&quot;&gt;&lt;/a&gt;图形初阶&lt;/h1&gt;&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E6%B0%94%E6%B3%A1%E5%9B%BE/"/>
    <id>http://yoursite.com/2020/09/28/R语言/气泡图/</id>
    <published>2020-09-28T02:35:53.682Z</published>
    <updated>2018-10-22T08:02:33.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Seurat气泡图"><a href="#Seurat气泡图" class="headerlink" title="Seurat气泡图"></a>Seurat气泡图</h1><h3 id="create-a-simulated-grouping-variable"><a href="#create-a-simulated-grouping-variable" class="headerlink" title="create a simulated grouping variable"></a>create a simulated grouping variable</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pbmc@meta.data$orig.ident &lt;- c(rep(<span class="string">"TAO"</span>, <span class="number">1044</span>), rep(<span class="string">"NC"</span>, <span class="number">5801</span>))</span><br></pre></td></tr></table></figure><p>&nbsp;</p><h3 id="translate-cluster-numbers-to-cell-names"><a href="#translate-cluster-numbers-to-cell-names" class="headerlink" title="translate cluster numbers to cell names"></a>translate cluster numbers to cell names</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">current.cluster.ids &lt;- c(c(<span class="number">0</span>,<span class="number">13</span>),c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>),c(<span class="number">2</span>),c(<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">11</span>),c(<span class="number">9</span>,<span class="number">10</span>),c(<span class="number">12</span>),c(<span class="number">5</span>))</span><br><span class="line">new.cluster.ids &lt;-c(rep(<span class="string">"adipocyte"</span>,<span class="number">2</span>),rep(<span class="string">"fibroblast"</span>,<span class="number">3</span>),<span class="string">"myocyte"</span>,rep(<span class="string">"APC"</span>,<span class="number">4</span>),rep(<span class="string">"lymphocytes"</span>,<span class="number">2</span>),<span class="string">"neutrophil"</span>,<span class="string">"epithelial"</span>)</span><br><span class="line">pbmc@ident &lt;- plyr::mapvalues(x = pbmc@ident, from = current.cluster.ids, to = new.cluster.ids)</span><br></pre></td></tr></table></figure><p>&nbsp;</p><h3 id="remove-clusters-that-are-not-of-interest"><a href="#remove-clusters-that-are-not-of-interest" class="headerlink" title="remove clusters that are not of interest"></a>remove clusters that are not of interest</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pbmc_rm &lt;- SubsetData(pbmc, ident.remove = c(<span class="string">"myocyte"</span>,<span class="string">"neutrophil"</span>))</span><br></pre></td></tr></table></figure><h6 id="Seurat对象，不能直接用subset取子集"><a href="#Seurat对象，不能直接用subset取子集" class="headerlink" title="Seurat对象，不能直接用subset取子集"></a>Seurat对象，不能直接用subset取子集</h6><p>&nbsp;</p><h3 id="SplitDotPlotGG"><a href="#SplitDotPlotGG" class="headerlink" title="SplitDotPlotGG"></a>SplitDotPlotGG</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">markers.to.plot &lt;- c(<span class="string">"CD3D"</span>,<span class="string">"CD19"</span>,<span class="string">"CD27"</span>,<span class="string">"TBX21"</span>,<span class="string">"STAT1"</span>,<span class="string">"GATA3"</span>,<span class="string">"STAT6"</span>,<span class="string">"RORA"</span>,<span class="string">"STAT3"</span>,<span class="string">"AHR"</span>,<span class="string">"IL2RA"</span>,<span class="string">"BCL6"</span>,<span class="string">"SPI1"</span>,<span class="string">"CD14"</span>,<span class="string">"CD68"</span>,<span class="string">"CD1C"</span>,<span class="string">"THBD"</span>,<span class="string">"NCAM1"</span>,<span class="string">"FCGR3A"</span>,<span class="string">"PECAM1"</span>,<span class="string">"MCAM"</span>,<span class="string">"CD34"</span>,<span class="string">"COL1A1"</span>)</span><br><span class="line"></span><br><span class="line">sdp &lt;- SplitDotPlotGG(object=pbmc_rm, grouping.var = <span class="string">"orig.ident"</span>, genes.plot = rev(markers.to.plot), cols.use = c(<span class="string">"blue"</span>, <span class="string">"red"</span>), x.lab.rot = <span class="literal">T</span>, plot.legend = <span class="literal">T</span>, dot.scale = <span class="number">8</span>, do.return = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/22/5bcd81f459509.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Seurat气泡图&quot;&gt;&lt;a href=&quot;#Seurat气泡图&quot; class=&quot;headerlink&quot; title=&quot;Seurat气泡图&quot;&gt;&lt;/a&gt;Seurat气泡图&lt;/h1&gt;&lt;h3 id=&quot;create-a-simulated-grouping-variable&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2020/09/28/R语言/面向对象/</id>
    <published>2020-09-28T02:35:53.679Z</published>
    <updated>2018-12-08T12:52:36.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>####《R语言实战学习笔记》####</p><p>R使用对象的类来确定当一个泛型函数被调用时采取什么样的行动 </p><p>&nbsp;</p><p>为了列出可获得的S3泛型函数，可以使用<code>methods()</code>函数：</p><p><img src="https://i.loli.net/2018/12/08/5c0bb9046fda4.jpg" alt></p><p>函数去掉括号后可查看函数对应的代码。带星号的不可以用这种方法。但是可以用<code>getAnywhere</code>查看代码</p><p>&nbsp;</p><p>定义泛型函数</p><p><img src="https://i.loli.net/2018/12/08/5c0bbb517fa87.jpg" alt="定义一个泛型函数"></p><p>当对象z被分配到两类时➍，第一类用来决定哪个泛型函数被调用。在最后一个例子中➎，没有<code>mymethod.c()</code>函数，因此下一个类（ a）被使用。 R从左到右搜索类的列表，寻找第一个可用的泛型函数。 </p><p>S3的局限性：任意的类能被分配到任意的对象上。没有完整性检验 </p><p>s4更加正式，更加严格。S4的对象和方法构造在强制执行的规则内被正式定义。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h1&gt;&lt;p&gt;####《R语言实战学习笔记》####&lt;/p&gt;
&lt;p&gt;R使用对象的类来确定当一个泛型函数被调用时采取什么样的行动 &lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%88%A9%E7%94%A8%E5%AE%89%E8%A3%85%E5%8C%85%E5%AE%89%E8%A3%85R%E5%8C%85/"/>
    <id>http://yoursite.com/2020/09/28/R语言/利用安装包安装R包/</id>
    <published>2020-09-28T02:35:53.675Z</published>
    <updated>2020-02-21T11:59:00.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用安装包安装R包"><a href="#利用安装包安装R包" class="headerlink" title="利用安装包安装R包"></a>利用安装包安装R包</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"/home/jiang/Downloads/GEOquery_2.54.1.tar.gz"</span>,repos=<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;利用安装包安装R包&quot;&gt;&lt;a href=&quot;#利用安装包安装R包&quot; class=&quot;headerlink&quot; title=&quot;利用安装包安装R包&quot;&gt;&lt;/a&gt;利用安装包安装R包&lt;/h2&gt;&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/09/28/R语言/聚类分析/</id>
    <published>2020-09-28T02:35:53.672Z</published>
    <updated>2018-09-20T07:33:35.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h1><h2 id="聚类分析的一般步骤"><a href="#聚类分析的一般步骤" class="headerlink" title="聚类分析的一般步骤"></a>聚类分析的一般步骤</h2><p>(1) 选择合适的变量 </p><p>(2) 缩放数据 </p><p>最常用的方法是将每个变量标准化为均值为0和标准差为1的变量。其他的替代方法包括每个变量被其最大值相除或该变量减去它的平均值并除以变量的平均绝对偏差。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df1 &lt;- apply(mydata, <span class="number">2</span>, <span class="keyword">function</span>(x)&#123;(x-mean(x))/sd(x)&#125;)</span><br><span class="line">df2 &lt;- apply(mydata, <span class="number">2</span>, <span class="keyword">function</span>(x)&#123;x/max(x)&#125;)</span><br><span class="line">df3 &lt;- apply(mydata, <span class="number">2</span>, <span class="keyword">function</span>(x)&#123;(x – mean(x))/mad(x)&#125;)</span><br></pre></td></tr></table></figure><p><code>scale</code>与df1效果相当</p><p>(3) 寻找异常点 </p><p>(4) 计算距离  两个观测值之间最常用的距离量度是欧几里得距离 </p><p>(5) 选择聚类算法  层次聚类/划分聚类</p><p>(6) 获得一种或多种聚类方法 </p><p>(7) 确定类的数目 </p><p>(8) 获得最终的聚类解决方案 </p><p>(9) 结果可视化 </p><p>(10) 解读类 </p><p>(11) 验证结果 </p><p>&nbsp;</p><h2 id="计算距离"><a href="#计算距离" class="headerlink" title="计算距离"></a>计算距离</h2><p><img src="https://i.loli.net/2018/09/20/5ba336cbd341c.jpg" alt></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d &lt;- dist(nutrient) <span class="comment">###计算距离，默认是欧式距离 结果为一个下三角矩阵</span></span><br><span class="line">as.matrix(d)[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>] <span class="comment">###转化为matrix</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h2 id="层次聚类"><a href="#层次聚类" class="headerlink" title="层次聚类"></a>层次聚类</h2><p>(1) 定义每个观测值（行或单元）为一类； </p><p>(2) 计算每类和其他各类的距离；</p><p>(3) 把距离最短的两类合并成一类，这样类的个数就减少一个；</p><p>(4) 重复步骤(2)和步骤(3)，直到包含所有观测值的类合并成单个的类为止 </p><p>&nbsp;</p><p><img src="https://i.loli.net/2018/09/20/5ba337bd9cfc1.jpg" alt></p><p>&nbsp;</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data(nutrient, package=<span class="string">"flexclust"</span>)</span><br><span class="line">row.names(nutrient) &lt;- tolower(row.names(nutrient)) <span class="comment">##标签转化为小写</span></span><br><span class="line">nutrient.scaled &lt;- scale(nutrient) </span><br><span class="line">d &lt;- dist(nutrient.scaled)</span><br><span class="line">fit.average &lt;- hclust(d, method=<span class="string">"average"</span>)</span><br><span class="line">plot(fit.average, hang=-<span class="number">1</span>, cex=<span class="number">.8</span>, main=<span class="string">"Average Linkage Clustering"</span>)</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>层次聚类实现: <code>hclust</code></p><p>&nbsp;</p><h3 id="选择聚类的个数"><a href="#选择聚类的个数" class="headerlink" title="选择聚类的个数"></a>选择聚类的个数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(NbClust)</span><br><span class="line">&gt; devAskNewPage(ask=<span class="literal">TRUE</span>)</span><br><span class="line">&gt; nc &lt;- NbClust(nutrient.scaled, distance=<span class="string">"euclidean"</span>, min.nc=<span class="number">2</span>, max.nc=<span class="number">15</span>,    method=<span class="string">"average"</span>) <span class="comment">##distance 计算距离的方法  euclidean欧式距离</span></span><br><span class="line">&gt; table(nc$Best.n[<span class="number">1</span>,])</span><br><span class="line"><span class="comment">#0 2 3 4 5 9 10 13 14 15</span></span><br><span class="line"><span class="comment">#2 4 4 3 4 1 1 2 1 4</span></span><br><span class="line">&gt; barplot(table(nc$Best.n[<span class="number">1</span>,]), xlab=<span class="string">"Numer of Clusters"</span>, ylab=<span class="string">"Number of Criteria"</span>,</span><br><span class="line">main=<span class="string">"Number of Clusters Chosen by 26 Criteria"</span>)<span class="comment"># 获取最终的聚类方案</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h3 id="获取最终的聚类方案"><a href="#获取最终的聚类方案" class="headerlink" title="获取最终的聚类方案"></a>获取最终的聚类方案</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; clusters &lt;- cutree(fit.average, k=<span class="number">5</span>)</span><br><span class="line">&gt; table(clusters)</span><br><span class="line">clusters</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">7</span> <span class="number">16</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">&gt; aggregate(nutrient, by=list(cluster=clusters), median) <span class="comment">##描述聚类</span></span><br><span class="line">&gt; plot(fit.average, hang=-<span class="number">1</span>, cex=<span class="number">.8</span>, main=<span class="string">"Average Linkage Clustering\n5 Cluster Solution"</span>)</span><br><span class="line">&gt; rect.hclust(fit.average, k=<span class="number">5</span>) <span class="comment">## 结果绘图</span></span><br></pre></td></tr></table></figure><p><code>aggregate</code>  Splits the data into subsets, computes summary statistics for each, and returns the result in a convenient form</p><p>&nbsp;</p><h2 id="划分聚类分析"><a href="#划分聚类分析" class="headerlink" title="划分聚类分析"></a>划分聚类分析</h2><p> K均值和基于中心点的划分（ PAM）</p><h3 id="K-均值聚类"><a href="#K-均值聚类" class="headerlink" title="K 均值聚类"></a>K 均值聚类</h3><p>(1) 选择K个中心点（随机选择K行）；</p><p>(2) 把每个数据点分配到离它最近的中心点；</p><p>(3) 重新计算每类中的点到该类中心点距离的平均值（也就说，得到长度为p的均值向量，这<br>里的p是变量的个数）；</p><p>(4) 分配每个数据到它最近的中心点； </p><p>(5) 重复步骤(3)和步骤(4)直到所有的观测值不再被分配或是达到最大的迭代次数（ R把10次<br>作为默认迭代次数）。 </p><p>&nbsp;</p><p>K均值聚类能处理比层次聚类更大的数据集。另外，观测值不会永远被分到一类中。当我们<br>提高整体解决方案时，聚类方案也会改动。但是均值的使用意味着所有的变量必须是连续的，并<br>且这个方法很有可能被异常值影响。它在非凸聚类（例如U型）情况下也会变得很差。 </p><p> &nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;聚类分析&quot;&gt;&lt;a href=&quot;#聚类分析&quot; class=&quot;headerlink&quot; title=&quot;聚类分析&quot;&gt;&lt;/a&gt;聚类分析&lt;/h1&gt;&lt;h2 id=&quot;聚类分析的一般步骤&quot;&gt;&lt;a href=&quot;#聚类分析的一般步骤&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2020/09/28/R语言/介绍/</id>
    <published>2020-09-28T02:35:53.668Z</published>
    <updated>2018-08-20T07:53:59.256Z</updated>
    
    <content type="html"><![CDATA[<p>getwd（）查看当前工作目录</p><p>setwd（）设定当前工作目录</p><p>dir.create() 创建新目录</p><p>source（“filename”）可在当前对话中执行一个文件</p><p>sink(“filename”) 将输出重定向到filename。默认会覆盖原内容</p><p>使用参数append=TRUE,可将文本追加到文件后，而不是覆盖他</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;getwd（）查看当前工作目录&lt;/p&gt;
&lt;p&gt;setwd（）设定当前工作目录&lt;/p&gt;
&lt;p&gt;dir.create() 创建新目录&lt;/p&gt;
&lt;p&gt;source（“filename”）可在当前对话中执行一个文件&lt;/p&gt;
&lt;p&gt;sink(“filename”) 将输出重定向到fi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%9F%BA%E5%9B%A0%E5%90%8D%E5%AD%97%E8%BD%AC%E6%8D%A2/"/>
    <id>http://yoursite.com/2020/09/28/R语言/基因名字转换/</id>
    <published>2020-09-28T02:35:53.664Z</published>
    <updated>2019-01-06T14:56:28.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="org-Hs-eg-db"><a href="#org-Hs-eg-db" class="headerlink" title="org.Hs.eg.db"></a>org.Hs.eg.db</h1><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(org.Hs.eg.db)</span><br><span class="line"></span><br><span class="line">ensids &lt;- c(<span class="string">"ENSG00000000003.13"</span>,<span class="string">"ENSG00000000005.5"</span>,<span class="string">"ENSG00000000419.11"</span>,<span class="string">"ENSG00000000457.12"</span>,<span class="string">"ENSG00000000460.15"</span>,<span class="string">"ENSG00000000938.11"</span>) </span><br><span class="line"></span><br><span class="line">tmp=gsub(<span class="string">"\\..*"</span>,<span class="string">""</span>,ensids) <span class="comment">## gsub替换 .匹配除换行符以外所有字符 \\R的转义符号</span></span><br><span class="line"></span><br><span class="line">col = c(<span class="string">"SYMBOL"</span>,<span class="string">"GENENAME"</span>)</span><br><span class="line"></span><br><span class="line">result = select(org.Hs.eg.db, keys=tmp, columns = col, keytype=<span class="string">"ENSEMBL"</span>)</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">g2s=toTable(org.Hs.egSYMBOL)</span><br><span class="line">g2e=toTable(org.Hs.egENSEMBL)</span><br><span class="line"></span><br><span class="line">g2 = merge(g2s,g2e,by=<span class="string">"gene_id"</span>)</span><br><span class="line"></span><br><span class="line">result = g2[which(g2$ensembl_id %<span class="keyword">in</span>% tmp),]</span><br></pre></td></tr></table></figure><p><strong>将探针转换为基因名，使用<code>hgu133a.db</code>包，转换过程与上面一模一样*</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;org-Hs-eg-db&quot;&gt;&lt;a href=&quot;#org-Hs-eg-db&quot; class=&quot;headerlink&quot; title=&quot;org.Hs.eg.db&quot;&gt;&lt;/a&gt;org.Hs.eg.db&lt;/h1&gt;&lt;h3 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%9F%BA%E6%9C%AC%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/09/28/R语言/基本统计分析/</id>
    <published>2020-09-28T02:35:53.661Z</published>
    <updated>2018-09-12T03:02:46.233Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本统计分析"><a href="#基本统计分析" class="headerlink" title="基本统计分析"></a>基本统计分析</h1><h2 id="描述性统计分析"><a href="#描述性统计分析" class="headerlink" title="描述性统计分析"></a>描述性统计分析</h2><p><strong>summary()</strong>   提供最小值，最大值，四分位数，平均值，频数</p><p>apply</p><p><strong>sapply (x, FUN, options)</strong>   FUN是任意函数，如果指定了options，它们将被传递给FUN  (options可以是自己写的函数)</p><p>求偏度：</p><p>sum((x - mean)^3/sd^3)/n</p><p>求峰值:</p><p>sum((x - mean)^4/sd^4)/n -3</p><h4 id="通过Hmisc包中describe（）计算"><a href="#通过Hmisc包中describe（）计算" class="headerlink" title="通过Hmisc包中describe（）计算"></a>通过Hmisc包中describe（）计算</h4><p>返回变量，观测值数量，缺失值和唯一值的数量，平均值，四分位数。五个最大值和五个最小值</p><h4 id="pastecs包中stat-desc"><a href="#pastecs包中stat-desc" class="headerlink" title="pastecs包中stat.desc()"></a>pastecs包中stat.desc()</h4><p>计算种类繁多的统计量</p><h4 id="psych包中的describe（）"><a href="#psych包中的describe（）" class="headerlink" title="psych包中的describe（）"></a>psych包中的describe（）</h4><p>psych 和 Hmisc中拥有相同的函数。这个时候，以后载入的包为准</p><p>比如先载入Hmisc，若想调用Hmisc的describe()  可使用：   Hmisc::describe</p><h2 id="分组计算描述性统计量"><a href="#分组计算描述性统计量" class="headerlink" title="分组计算描述性统计量"></a>分组计算描述性统计量</h2><p><em>aggregate(x, by, FUN)</em>   :  FUN只支持平均数和方差</p><p><em>by(data，INDICES，FUN)</em> ：INDICES定义了分组</p><h2 id="频数表和列联表"><a href="#频数表和列联表" class="headerlink" title="频数表和列联表"></a>频数表和列联表</h2><p>table()  生成简单的频数统计表</p><p>prop.table() 将频数转化比例值</p><p>prop.table()*100 转化为百分比</p><h3 id="二维列联表"><a href="#二维列联表" class="headerlink" title="二维列联表"></a>二维列联表</h3><p>mytable &lt;- table(A, B)</p><p>mytable &lt;- xtabs(~A+B, data = mydata)  </p><p>margin.table()  和 prop.table() 分别生成边际频数和比例</p><p>addmargins()添加边际和</p><h3 id="多维列联表"><a href="#多维列联表" class="headerlink" title="多维列联表"></a>多维列联表</h3><p>以上都可以</p><p>ftable可以创建更紧凑的列联表</p><h2 id="独立性检验"><a href="#独立性检验" class="headerlink" title="独立性检验"></a>独立性检验</h2><h3 id="卡方检验"><a href="#卡方检验" class="headerlink" title="卡方检验"></a>卡方检验</h3><p>chisq.test()</p><h3 id="Fisher精确检验"><a href="#Fisher精确检验" class="headerlink" title="Fisher精确检验"></a>Fisher精确检验</h3><p>fisher.test()</p><h3 id="cochran-Mantel-Haenszel"><a href="#cochran-Mantel-Haenszel" class="headerlink" title="cochran-Mantel-Haenszel"></a>cochran-Mantel-Haenszel</h3><p>mantelhaen.test()</p><h3 id="相关性的度量"><a href="#相关性的度量" class="headerlink" title="相关性的度量"></a>相关性的度量</h3><p><strong><em>vcd包中的assocstats()  可以计算列联表的phi系数，列联系数，cramer‘s V系数</em></strong></p><p>值越小，相关性越小。&lt;0.3表示相关性弱，&gt;0.6表示具有较强的相关性</p><p>kappa()函数：可用来评估混淆矩阵的kappa值和加权kappa    </p><h2 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h2><p><strong>相关系数的性质如下：</strong></p><ol><li><p>相关系数的值介于-1与+1之间，即-1≤r≤+1。</p><p>当r&gt;0时，表示两变量正相关，当r&lt;0时，表示两变量为负相关。当|r|=1时，表示两变量为完全线性相关即函数关系。当r=1时，称为完全正相关，而当r=-1时，称为完全负相关。当r=0时，表示两变量间无线性相关关系。</p></li><li><p>r具有对称性。X与y之间的相关系数rxy和y与x之间的相关系数ryx相等。</p></li><li>r数值大小与x和y的数据原点及计量尺度无关。改变x和y的数据原点和计量尺度，并不改变r数值的大小。</li><li>r仅仅是x与y 之间线性关系的一个度量，它不能用于描述非线性关系。</li><li><p>r虽然是两个变量之间线性关系的一个度量，却不一定意味着x与y一定有因果关系。</p><p>6.当︱r︱≥0.8时，可视为高度相关；当0.5≤︱r︱&lt;0.8时，可视为中度相关；当0.3≤︱r︱&lt;0.5时，视为低度相关；当︱r︱&lt;0.3时，说明两个变量之间的相关程度极弱。</p></li></ol><p><strong>person积差相关系数衡量两个定量变量之间的线性相关程度</strong></p><p><strong>Spearman等级相关系数衡量分级定序变量之间的相关程度</strong></p><p><strong>Kendall’s Tau相关系数也是分级变量的相关程度</strong></p><p><strong>cor() 可以计算以上三种相关系数</strong></p><p><strong>cov()可以计算协方差</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor(x,use,menthod)  <span class="comment">##x:矩阵或数据框   use：处理缺失值的方法  method：选择相关系数</span></span><br></pre></td></tr></table></figure><h3 id="偏相关"><a href="#偏相关" class="headerlink" title="偏相关"></a>偏相关</h3><p>控制一个或多个变量时，另外两个变量之间的相互关系</p><p>用<strong><em>ggm包</em></strong>中的<strong><em>pcor函数</em></strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">"ggm"</span>)</span><br><span class="line">pcor(c(), cov())  <span class="comment">##前两个数表示要求的两个变量   后几个数表示要排除的变量</span></span><br></pre></td></tr></table></figure><h2 id="相关性的显著分析"><a href="#相关性的显著分析" class="headerlink" title="相关性的显著分析"></a>相关性的显著分析</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor.test(x,y,use,method)  <span class="comment">## 对单一相关系数显著性检验，每次只能检测一种相关关系</span></span><br></pre></td></tr></table></figure><p><strong><em>corr.test()</em></strong>   可以计算多种     <strong><em>psych包</em></strong></p><p>偏相关系数的显著性检验：pcor.test  <strong><em>psych包</em></strong></p><h2 id="t检验"><a href="#t检验" class="headerlink" title="t检验"></a>t检验</h2><h3 id="独立样本的t检验"><a href="#独立样本的t检验" class="headerlink" title="独立样本的t检验"></a>独立样本的t检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(y~x, data)  <span class="comment">##y是一个数值型向量   x表示一个二分变量</span></span><br></pre></td></tr></table></figure><p>  默认是方差不齐。调参数var.equal = TRUE</p><h4 id="非独立样本的t检验"><a href="#非独立样本的t检验" class="headerlink" title="非独立样本的t检验"></a>非独立样本的t检验</h4><p>非独立样本的t检验假定组间差异呈正态分布</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(y1, y2, paired = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h2 id="组间差异的非参数检验"><a href="#组间差异的非参数检验" class="headerlink" title="组间差异的非参数检验"></a>组间差异的非参数检验</h2><h3 id="两组"><a href="#两组" class="headerlink" title="两组"></a>两组</h3><p>无法满足t检验或ANOVA的参数假设，可以转而使用非参数方法</p><p>Wilcoxon秩和检验</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wilcoxon(y~x, data）</span><br><span class="line">wilcoxon(y1,y2)</span><br></pre></td></tr></table></figure><p>可以设置：alternative = “less” 或“greater”进行有方向的秩和检验</p><p><strong><em>在假设合理时，t检验更能发现差异。非参数检验在参数非常不合理时适用</em></strong></p><h3 id="多于两组"><a href="#多于两组" class="headerlink" title="多于两组"></a>多于两组</h3><p>用Kruskal.test 和friedman.test(两组不独立时，用这个更适用)</p><p>多组之间成对比较，可以用函数wmc() &lt;========需要网上下载脚本，source(“网址”)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本统计分析&quot;&gt;&lt;a href=&quot;#基本统计分析&quot; class=&quot;headerlink&quot; title=&quot;基本统计分析&quot;&gt;&lt;/a&gt;基本统计分析&lt;/h1&gt;&lt;h2 id=&quot;描述性统计分析&quot;&gt;&lt;a href=&quot;#描述性统计分析&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/28/R语言/基本数据管理/</id>
    <published>2020-09-28T02:35:53.658Z</published>
    <updated>2018-09-13T05:04:24.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本数据管理"><a href="#基本数据管理" class="headerlink" title="基本数据管理"></a>基本数据管理</h1><h2 id="创建新变量"><a href="#创建新变量" class="headerlink" title="创建新变量"></a>创建新变量</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mydata &lt;- transform(mydata,</span><br><span class="line">       mean = (x1 + x2)/<span class="number">2</span></span><br><span class="line">   sum = x1 + x2)</span><br></pre></td></tr></table></figure><h2 id="变量的重编程"><a href="#变量的重编程" class="headerlink" title="变量的重编程"></a>变量的重编程</h2><p><strong><em>within与with相同，但是它允许对数据框进行修改</em></strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable[condition] &lt;- expression <span class="comment">###在条件为真时，进行赋值</span></span><br></pre></td></tr></table></figure><h2 id="变量的重命名"><a href="#变量的重命名" class="headerlink" title="变量的重命名"></a>变量的重命名</h2><p>1   </p><p>使用fix()   调出一个交互式编辑器</p><p>2  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name(数据框名)[需要修改的名字位置] &lt;- <span class="string">"newname"</span></span><br></pre></td></tr></table></figure><p>3</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line">leadership &lt;- rename(leadership,c(oldname=<span class="string">"newname"</span>))</span><br></pre></td></tr></table></figure><h2 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h2><p>NA</p><p>使用函数<strong><em>is.na()</em></strong>来判断是否存在缺失值</p><p>缺失值不能拿来比较</p><p>R不把不可能出现的数值或者无限的数设置为缺失值。正无穷，负无穷表示方法：Inf或者-Inf。 不可能的值，如sin(Inf),标记为NaN。判断方法：is.infinite() 或者is.nan()</p><h3 id="在分析中排除缺失值"><a href="#在分析中排除缺失值" class="headerlink" title="在分析中排除缺失值"></a>在分析中排除缺失值</h3><p>多数的数值函数，可以用<strong><em>na.rm = TRUE</em></strong>来移除缺失值</p><p><strong><em>na.omit()</em></strong>移除含有缺失值的行</p><h2 id="日期值"><a href="#日期值" class="headerlink" title="日期值"></a>日期值</h2><p>日期值在R中，先以字符串的形式输入，然后转化为数值</p><p>执行这一操作的是：<strong><em>as.Date(x, “Input_format”)</em></strong></p><p><strong><em>Sys.Date()</em></strong> 返回当天的时间</p><p><strong><em>date()</em></strong> 返回当天的日期和时间</p><p><strong><em>format(x, format = “Output_format”) :输出指定格式的日期值</em></strong></p><p>日期值可以进行计算</p><p>可使用<strong><em>difftime()</em></strong> 计算日期间隔</p><p>可以用<strong><em>as.character()</em></strong>将日期值转化为字符</p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p><strong><em>is.datatype()</em></strong>  这样的函数，将判断参数的类型</p><p><strong><em>as.datatype()</em></strong> 将参数转换为对应的类型</p><h2 id="数据排序"><a href="#数据排序" class="headerlink" title="数据排序"></a>数据排序</h2><p><strong><em>order()</em></strong> 进行排序</p><p>默认顺序是升序</p><p>需要降序时，就在排序变量前加负号</p><h2 id="数据集的合并"><a href="#数据集的合并" class="headerlink" title="数据集的合并"></a>数据集的合并</h2><h3 id="向数据集添加列"><a href="#向数据集添加列" class="headerlink" title="向数据集添加列"></a>向数据集添加列</h3><p>横向合并两个数据框，用函数<strong><em>merge()</em></strong>(通过内部联结)</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">total &lt;- merge(dataframeA,  dataframeB, by=<span class="string">"ID"</span>)</span><br></pre></td></tr></table></figure><p>如果不指定公共索引，可用cbind合并</p><h3 id="向数据集添加行"><a href="#向数据集添加行" class="headerlink" title="向数据集添加行"></a>向数据集添加行</h3><p>rbind</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">total &lt;- rbind(dataframeA,  dataframeB)</span><br></pre></td></tr></table></figure><p>在合并前，要先保证两者有相同的变量</p><h2 id="数据集提取子集"><a href="#数据集提取子集" class="headerlink" title="数据集提取子集"></a>数据集提取子集</h2><h3 id="选入-保留-变量消息称"><a href="#选入-保留-变量消息称" class="headerlink" title="选入(保留)变量消息称"></a>选入(保留)变量消息称</h3><h3 id="剔除（丢弃）变量"><a href="#剔除（丢弃）变量" class="headerlink" title="剔除（丢弃）变量"></a>剔除（丢弃）变量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myvars &lt;- names(leadership) %<span class="keyword">in</span>% c(q3，q4)</span><br><span class="line">newdata &lt;-  leadership[!myvars]</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leadership &lt;- leadership[c(-<span class="number">8</span>,-<span class="number">9</span>)] <span class="comment">##在要去除的项前面加负号</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leadership$q3 &lt;- leadership$q4 &lt;- <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><h3 id="选入观测"><a href="#选入观测" class="headerlink" title="选入观测"></a>选入观测</h3><p>使用行下标</p><p>或者用条件判断的方式</p><h3 id="subset"><a href="#subset" class="headerlink" title="subset"></a>subset</h3><p>选择变量和观测最简单的方法</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newdata &lt;- subset(leadership,age &gt;=<span class="number">35</span>| age &lt;<span class="number">24</span>, </span><br><span class="line">selectc =c(q1:q4))</span><br></pre></td></tr></table></figure><p>subset   select</p><h3 id="随机抽样"><a href="#随机抽样" class="headerlink" title="随机抽样"></a>随机抽样</h3><p>sample()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysample &lt;- leadership[sample(<span class="number">1</span>:nrow(leadership), <span class="number">3</span>, replace = False)]</span><br></pre></td></tr></table></figure><p>1:nrow(leadership)  :选择范围</p><p>3  ：选取3个元素</p><p>replace = False   无放回的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本数据管理&quot;&gt;&lt;a href=&quot;#基本数据管理&quot; class=&quot;headerlink&quot; title=&quot;基本数据管理&quot;&gt;&lt;/a&gt;基本数据管理&lt;/h1&gt;&lt;h2 id=&quot;创建新变量&quot;&gt;&lt;a href=&quot;#创建新变量&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E5%85%B3%E8%8A%82%E7%82%8E--%E5%8D%95%E7%BB%86%E8%83%9E%E8%BD%AC%E5%BD%95%E7%BB%84%E4%B8%8E%E8%B4%A8%E8%B0%B1%E6%B5%81%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/09/28/R语言/关节炎--单细胞转录组与质谱流式/</id>
    <published>2020-09-28T02:35:53.655Z</published>
    <updated>2020-09-09T04:17:19.942Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态"><a href="#通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态" class="headerlink" title="通过整合single-cell transcriptomics和mass cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态"></a>通过整合single-cell transcriptomics和mass cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎滑膜组织中的炎症细胞状态&quot;&gt;&lt;a href=&quot;#通过整合single-cell-transcriptomics和mass-cytometry定义类风湿关节炎
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/28/R语言/高级数据管理/</id>
    <published>2020-09-28T02:35:53.652Z</published>
    <updated>2018-09-13T05:55:02.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高级数据管理"><a href="#高级数据管理" class="headerlink" title="高级数据管理"></a>高级数据管理</h1><h2 id="字符处理函数"><a href="#字符处理函数" class="headerlink" title="字符处理函数"></a>字符处理函数</h2><p>nchar() 计算字符数量</p><p>substr(x, start, stop)  提取或替换字符串中的一个子串</p><p>grep() 搜素某种模式</p><p>sub(pattern, replacement,x,ignore.case=FALSE,fixed=FALSE)</p><p>搜索pattern，并用replacement替换</p><p>strsplit(x, split,fixed=FALISE)  在split分隔符处分割字符串</p><p>paste(x,sep= “”) 连接字符，用分隔符sep</p><p>toupper   转大写</p><p>tolower 小写转化</p><h2 id="数值处理函数"><a href="#数值处理函数" class="headerlink" title="数值处理函数"></a>数值处理函数</h2><p>1、数学函数</p><p>2、统计函数</p><p>mean median sd </p><p>var()–方差</p><p>mad–绝对中位数</p><p>quantile–求分位数</p><p>range–求值域</p><p>sum</p><p>diff</p><p>min max scale()—-标准化</p><h2 id="数据的标准化"><a href="#数据的标准化" class="headerlink" title="数据的标准化"></a>数据的标准化</h2><p><strong><em>scale()</em></strong> 对指定列进行均值为0，标准差为1的标准化</p><p>对每一列进行标准化</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newdata &lt;- scale(mydata)*SD + M</span><br></pre></td></tr></table></figure><p>对指定列进行标准化</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newdata &lt;- transform(mydata, myvar = scale(myvar)*SD + M)</span><br></pre></td></tr></table></figure><h2 id="概率函数"><a href="#概率函数" class="headerlink" title="概率函数"></a>概率函数</h2><p><strong><em>set.seed()</em></strong>  显式指定种子，让结果再现</p><p><strong><em>runif()</em></strong> 生成从0-1区间上服从均匀分布的伪随机数</p><h2 id="其他实用函数"><a href="#其他实用函数" class="headerlink" title="其他实用函数"></a>其他实用函数</h2><p>length()  长度</p><p>seq(from,to,by) 生成序列</p><p>rep(x,n)  重复</p><p>cut() 将连续型数值分割为有n个水平的因子</p><p>pretty()  </p><p>cat(…,file,append = FALSE) 输出内容到文件file</p><p>举例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">options(digits=<span class="number">2</span>)  <span class="comment">###限定小数点的显示位数</span></span><br><span class="line">Student &lt;- c(<span class="string">"John Davis"</span>, <span class="string">"Angela Williams"</span>, <span class="string">"Bullwinkle Moose"</span>,</span><br><span class="line">             <span class="string">"David Jones"</span>, <span class="string">"Janice Markhammer"</span>, <span class="string">"Cheryl Cushing"</span>,</span><br><span class="line">             <span class="string">"Reuven Ytzrhak"</span>, <span class="string">"Greg Knox"</span>, <span class="string">"Joel England"</span>,</span><br><span class="line">             <span class="string">"Mary Rayburn"</span>)</span><br><span class="line">Math &lt;- c(<span class="number">502</span>, <span class="number">600</span>, <span class="number">412</span>, <span class="number">358</span>, <span class="number">495</span>, <span class="number">512</span>, <span class="number">410</span>, <span class="number">625</span>, <span class="number">573</span>, <span class="number">522</span>)</span><br><span class="line">Science &lt;- c(<span class="number">95</span>, <span class="number">99</span>, <span class="number">80</span>, <span class="number">82</span>, <span class="number">75</span>, <span class="number">85</span>, <span class="number">80</span>, <span class="number">95</span>, <span class="number">89</span>, <span class="number">86</span>)</span><br><span class="line">English &lt;- c(<span class="number">25</span>, <span class="number">22</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">28</span>, <span class="number">15</span>, <span class="number">30</span>, <span class="number">27</span>, <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">roster &lt;- data.frame(Student, Math, Science, English,</span><br><span class="line">                     stringsAsFactors=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">z &lt;- scale(roster[,<span class="number">2</span>:<span class="number">4</span>])</span><br><span class="line">score &lt;- apply(z, <span class="number">1</span>, mean)</span><br><span class="line">roster &lt;- cbind(roster, score)</span><br><span class="line"></span><br><span class="line">y &lt;- quantile(score, c(<span class="number">.8</span>,<span class="number">.6</span>,<span class="number">.4</span>,<span class="number">.2</span>))</span><br><span class="line">roster$grade[score &gt;= y[<span class="number">1</span>]] &lt;- <span class="string">"A"</span></span><br><span class="line">roster$grade[score &lt; y[<span class="number">1</span>] &amp; score &gt;= y[<span class="number">2</span>]] &lt;- <span class="string">"B"</span></span><br><span class="line">roster$grade[score &lt; y[<span class="number">2</span>] &amp; score &gt;= y[<span class="number">3</span>]] &lt;- <span class="string">"C"</span></span><br><span class="line">roster$grade[score &lt; y[<span class="number">3</span>] &amp; score &gt;= y[<span class="number">4</span>]] &lt;- <span class="string">"D"</span></span><br><span class="line">roster$grade[score &lt; y[<span class="number">4</span>]] &lt;- <span class="string">"F"</span></span><br><span class="line"></span><br><span class="line">name &lt;- strsplit((roster$Student), <span class="string">" "</span>)</span><br><span class="line">Lastname &lt;- sapply(name, <span class="string">"["</span>, <span class="number">2</span>)  <span class="comment">#"[" 提取某个对象的一部分</span></span><br><span class="line">Firstname &lt;- sapply(name, <span class="string">"["</span>, <span class="number">1</span>)</span><br><span class="line">roster &lt;- cbind(Firstname,Lastname, roster[,-<span class="number">1</span>])</span><br><span class="line">roster &lt;- roster[order(Lastname,Firstname),]</span><br><span class="line"></span><br><span class="line">roster</span><br></pre></td></tr></table></figure><p>sapply()   提取列表中元素</p><p>apply的用法</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply(data, MARGIN, FUN) <span class="comment">##MARGIN=1 表示行，=2表示列</span></span><br></pre></td></tr></table></figure><h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><p>while </p><p>if</p><p>ifelse (cond,statement1,statement2)</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">feelings &lt;- c(<span class="string">"sad"</span>, <span class="string">"afraid"</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> feelings)</span><br><span class="line">  print(</span><br><span class="line">    <span class="keyword">switch</span>(i,</span><br><span class="line">           happy  = <span class="string">"I am glad you are happy"</span>,</span><br><span class="line">           afraid = <span class="string">"There is nothing to fear"</span>,</span><br><span class="line">           sad    = <span class="string">"Cheer up"</span>,</span><br><span class="line">           angry  = <span class="string">"Calm down now"</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><h2 id="整合与重构"><a href="#整合与重构" class="headerlink" title="整合与重构"></a>整合与重构</h2><h3 id="转置"><a href="#转置" class="headerlink" title="转置"></a>转置</h3><p>t()</p><h2 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h2><p>aggregate（归类）</p><h2 id="reshape2包"><a href="#reshape2包" class="headerlink" title="reshape2包"></a>reshape2包</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using the reshape2 package</span></span><br><span class="line"><span class="keyword">library</span>(reshape2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># input data</span></span><br><span class="line">mydata &lt;- read.table(header=<span class="literal">TRUE</span>, sep=<span class="string">" "</span>, text=<span class="string">"</span></span><br><span class="line"><span class="string">ID Time X1 X2</span></span><br><span class="line"><span class="string">1 1 5 6</span></span><br><span class="line"><span class="string">1 2 3 5</span></span><br><span class="line"><span class="string">2 1 6 1</span></span><br><span class="line"><span class="string">2 2 2 4</span></span><br><span class="line"><span class="string">"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># melt data</span></span><br><span class="line">md &lt;- melt(mydata, id=c(<span class="string">"ID"</span>, <span class="string">"Time"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># reshaping with aggregation</span></span><br><span class="line">dcast(md, ID~variable, mean)</span><br><span class="line">dcast(md, Time~variable, mean)</span><br><span class="line">dcast(md, ID~Time, mean)</span><br><span class="line"></span><br><span class="line"><span class="comment"># reshaping without aggregation</span></span><br><span class="line">dcast(md, ID+Time~variable)</span><br><span class="line">dcast(md, ID+variable~Time)</span><br><span class="line">dcast(md, ID~variable+Time)</span><br></pre></td></tr></table></figure><p><code>melt</code> 和 <code>dcast</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;高级数据管理&quot;&gt;&lt;a href=&quot;#高级数据管理&quot; class=&quot;headerlink&quot; title=&quot;高级数据管理&quot;&gt;&lt;/a&gt;高级数据管理&lt;/h1&gt;&lt;h2 id=&quot;字符处理函数&quot;&gt;&lt;a href=&quot;#字符处理函数&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E4%BB%A3%E7%A0%81%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/09/28/R语言/代码记录/</id>
    <published>2020-09-28T02:35:53.649Z</published>
    <updated>2018-10-12T09:59:38.278Z</updated>
    
    <content type="html"><![CDATA[<p>查看各簇细胞数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cor=pbmc@dr$tsne@cell.embeddings</span><br><span class="line">tsne=as.data.frame(pbmc@ident)</span><br><span class="line">table(tsne)</span><br></pre></td></tr></table></figure><p><code>table(variable)</code>  可以显示每个变量出现的次数</p><p><code>df[row,col]</code> 取数据框的子集</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d[d$pi&gt;<span class="number">3</span>,]与d[which(d$pi&gt;<span class="number">3</span>),] <span class="comment">##功能相同</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/songzhilian22/article/details/49006391/" target="_blank" rel="noopener">ggplot学习笔记之标度scale</a></p><p><code>cut</code>的使用</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c0=c(<span class="number">2.3</span>,<span class="number">3</span>,<span class="number">1.5</span>,<span class="number">4.8</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9.5</span>)  <span class="comment">#被划分的对象</span></span><br><span class="line">cuttime=c(<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>)                 ＃分割点</span><br><span class="line">cut(c0,cuttime,labels = <span class="literal">F</span>,right = <span class="literal">F</span>,include.lowest=<span class="literal">T</span>)  </span><br><span class="line"><span class="comment">#right＝F：每个区间左闭右开，否则默认左开右闭</span></span><br><span class="line"><span class="comment">#include.lowest:第一个区间包含左端点／最后一个区间包含右端点</span></span><br><span class="line"><span class="comment">#label=F:只返回在第几个区间,否则会显示具体的区间</span></span><br></pre></td></tr></table></figure><p>linux 复制文件到多个文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo /home/xgj/test/ /home/xgj/tmp | xargs -n 1 cp -v /home/xgj/bin/sys_info.sh</span><br></pre></td></tr></table></figure><p>字符串替代：gsub()负责搜索字符串的特定表达式，并用新的内容加以替代。sub()函数是类似的，但只替代第一个发现结果</p><p>字符串匹配：grep()负责搜索给定字符串对象中特定表达式 ，并返回其位置索引。grepl()函数与之类似，但其后面的”l”则意味着返回的将是逻辑值。</p><p><code>as</code></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">as(object, Class, strict=<span class="literal">TRUE</span>, ext)</span><br><span class="line">as(object, Class) &lt;- value</span><br></pre></td></tr></table></figure><p><code>as(object)</code> returns the version of this object coerced to be the given <code>Class</code>. When used in the replacement form on the left of an assignment, the portion of the object corresponding to <code>Class</code> is replaced by <code>value</code>.</p><p><code>as.image()</code>  保存工作空间映像</p><p>然后用<code>load</code>载入空间映像</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;查看各簇细胞数：&lt;/p&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/09/28/R%E8%AF%AD%E8%A8%80/%E4%BB%8EGithub%E4%B8%8A%E8%8E%B7%E5%8F%96R%E5%8C%85%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2020/09/28/R语言/从Github上获取R包安装/</id>
    <published>2020-09-28T02:35:53.646Z</published>
    <updated>2019-09-10T16:12:26.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转载-从Github上获取R包-安装"><a href="#转载-从Github上获取R包-安装" class="headerlink" title="转载 | 从Github上获取R包/安装"></a>转载 | 从Github上获取R包/安装</h1><h4 id="1-通过Github仓库名和包名加载"><a href="#1-通过Github仓库名和包名加载" class="headerlink" title="1.通过Github仓库名和包名加载"></a>1.通过Github仓库名和包名加载</h4><p>不是所有的R包都提交上传到CRAN，如Github，需要通过一定的渠道进行安装</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"devtools"</span>)</span><br><span class="line"><span class="keyword">library</span>(devtools)</span><br><span class="line">install_github(<span class="string">"RevolutionAnalytics/RHadoop"</span>)</span><br></pre></td></tr></table></figure><h4 id="2-通过包名安装R包：已发布至CRAN"><a href="#2-通过包名安装R包：已发布至CRAN" class="headerlink" title="2.通过包名安装R包：已发布至CRAN"></a>2.通过包名安装R包：已发布至CRAN</h4><p><strong>（1）开发者将自己开发的R包发布到了CRAN并保存在Github仓库</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">'githubinstall'</span>) <span class="comment">#加载github</span></span><br><span class="line"><span class="keyword">library</span>(githubinstall)</span><br><span class="line">githubinstall(<span class="string">'RHadoop'</span>)</span><br></pre></td></tr></table></figure><p><strong>（2）githubinstall()会从Github的仓库中搜索相应的R包，并询问你是否安装。其中githubinstall()会提示你安装建议的R包，但我们可能只想知道都有哪些建议。</strong></p><p><strong>（3）gh_suggest()以向量的形式返回建议的仓库名</strong></p><h4 id="3-以用户名搜索其开发的R包"><a href="#3-以用户名搜索其开发的R包" class="headerlink" title="3.以用户名搜索其开发的R包"></a>3.以用户名搜索其开发的R包</h4><p>gh_list_packages()函数以数据框的形式返回Github上R包的仓库名列表</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yihuiverse &lt;- gh_list_packages(username = <span class="string">"yihui"</span>)</span><br><span class="line">head(yihuiverse)</span><br></pre></td></tr></table></figure><h4 id="4-通过关键词搜索R包"><a href="#4-通过关键词搜索R包" class="headerlink" title="4. 通过关键词搜索R包"></a>4. 通过关键词搜索R包</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gh_search_packages(<span class="string">'lasso'</span>)</span><br></pre></td></tr></table></figure><h4 id="5-显示Github上给定R函数的源代码"><a href="#5-显示Github上给定R函数的源代码" class="headerlink" title="5. 显示Github上给定R函数的源代码"></a>5. 显示Github上给定R函数的源代码</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gh_show_source(<span class="string">"mutate"</span>, <span class="string">"dplyr"</span>)</span><br></pre></td></tr></table></figure><p>如果加载了该函数所属的R包，直接输入函数名即可</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">gh_show_source(mutate)</span><br></pre></td></tr></table></figure><h4 id="6-更新R包列表"><a href="#6-更新R包列表" class="headerlink" title="6.更新R包列表"></a>6.更新R包列表</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gh_update_package_list()</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/tandelin/article/details/87601729" target="_blank" rel="noopener">https://blog.csdn.net/tandelin/article/details/87601729</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;转载-从Github上获取R包-安装&quot;&gt;&lt;a href=&quot;#转载-从Github上获取R包-安装&quot; class=&quot;headerlink&quot; title=&quot;转载 | 从Github上获取R包/安装&quot;&gt;&lt;/a&gt;转载 | 从Github上获取R包/安装&lt;/h1&gt;&lt;h4 i
      
    
    </summary>
    
    
  </entry>
  
</feed>
